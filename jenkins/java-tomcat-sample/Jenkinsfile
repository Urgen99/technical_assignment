pipeline {
    agent any
    environment {
        SONAR_TOKEN = credentials('sonartoken') // Use the Jenkins credentials ID you configured
    }
    stages {
        stage('Checkout Code') {
            steps {
                   echo 'Code already checked out by SCM. Proceeding...'
            }
        }

        stage('SonarQube Analysis') {
            steps {
                withSonarQubeEnv('SonarQube') {
                    sh '''
                  mvn -f jenkins/java-tomcat-sample/pom.xml clean verify sonar:sonar \
                    -Dsonar.projectKey=java-tomcat-sample \
                    -Dsonar.host.url=http://3.83.243.85:9000 \
                    -Dsonar.login=$SONAR_TOKEN

                    '''
                }
            }
        }

        stage('Build Application') {
            steps {
                sh 'mvn -f jenkins/java-tomcat-sample/pom.xml clean package'
            }
            post {
                success {
                    echo "Now Archiving the Artifacts...."
                    archiveArtifacts artifacts: '**/*.war'
                }
              }
        }

        stage('Create Tomcat Image') {
            steps {
                copyArtifacts(
                    filter: '**/*.war',
                    fingerprintArtifacts: true,
                    projectName: env.JOB_NAME,
                    selector: specific(env.BUILD_NUMBER)
                )
                echo "Building docker image"
                sh '''
                original_pwd=$(pwd -P)
                cd jenkins/java-tomcat-sample
                docker build -t localtomcatimg:$BUILD_NUMBER .
                cd $original_pwd
                '''
            }
        }
        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_USER', passwordVariable: 'DOCKER_PASS')]) {
                    sh '''
                    echo "$DOCKER_PASS" | docker login -u "$DOCKER_USER" --password-stdin
                    docker push urgentamang/technicalassignment:$BUILD_NUMBER
                    docker logout
                    '''
                }
            }
        }

        stage('Deploy to Staging Env') {
             steps {
                echo "Running app on staging env"
                sh '''
                docker stop tomcatInstanceStaging || true
                docker rm tomcatInstanceStaging || true
                docker run -itd --name tomcatInstanceStaging -p 8082:8080 localtomcatimg:$BUILD_NUMBER
                '''
            }
        }

        stage('Deploy to Production Env') {
            steps {
                timeout(time: 1, unit: 'DAYS') {
                    input message: 'Approve PRODUCTION Deployment?'
                }
                echo "Running app on Prod env"
                sh '''
                docker stop tomcatInstanceProd || true
                docker rm tomcatInstanceProd || true
                docker run -itd --name tomcatInstanceProd -p 8083:8080 localtomcatimg:$BUILD_NUMBER
                '''
            }
        }
    }
}

                                                        
